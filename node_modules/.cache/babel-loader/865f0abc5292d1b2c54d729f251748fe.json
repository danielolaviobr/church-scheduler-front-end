{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Desktop/church-scheduler/church-scheduler/src/pages/celula-page.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/pages/celula-page.css\";\nimport { Alert } from \"@material-ui/lab\";\nimport smallLogo from \"../images/logo-small.svg\";\nimport Axios from \"axios\";\n\nfunction CelulaPage() {\n  const [fullName, setFullName] = useState(\"\");\n  const [alertData, setAlertData] = useState({\n    type: undefined,\n    message: undefined,\n    visible: false\n  });\n  const [displayAlert, setDisplayAlert] = useState(undefined);\n\n  async function submitForm() {\n    const response = await Axios.post(\"http://localhost:3003/celula\", {\n      name: fullName\n    }).catch(() => {\n      return {\n        status: 400\n      };\n    });\n\n    if (response.status === 201) {\n      setAlertData({\n        type: \"success\",\n        message: \"Inscrição realizada com sucesso\",\n        visible: true\n      });\n    } else {\n      setAlertData({\n        type: \"error\",\n        message: \"Ocorreu um erro ao realizar a inscrição\",\n        visible: true\n      });\n    }\n\n    setFullName(\"\");\n  }\n\n  useEffect(() => {\n    getDate();\n    setDisplayAlert(alertData.visible ? /*#__PURE__*/React.createElement(Alert, {\n      severity: alertData.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, alertData.message) : undefined);\n  }, [alertData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"celula-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: smallLogo,\n    alt: \"In\\xEDcio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, displayAlert, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Celula de Quinta-feira\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: fullName,\n    onChange: event => setFullName(event.target.value),\n    placeholder: \"Nome Completo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/celula\",\n    onClick: submitForm,\n    className: \"confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Inscrever-se\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Voltar\")));\n}\n\nexport default CelulaPage;","map":{"version":3,"sources":["/Users/Daniel/Desktop/church-scheduler/church-scheduler/src/pages/celula-page.tsx"],"names":["React","useEffect","useState","Link","Alert","Axios","CelulaPage","fullName","setFullName","alertData","setAlertData","type","undefined","message","visible","displayAlert","setDisplayAlert","submitForm","response","post","name","catch","status","getDate","smallLogo","event","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/pages/celula-page.css\";\nimport { Alert } from \"@material-ui/lab\";\n\nimport smallLogo from \"../images/logo-small.svg\";\nimport Axios from \"axios\";\n\nfunction CelulaPage() {\n  interface alertDataType {\n    type: \"success\" | \"warning\" | \"info\" | \"error\" | undefined;\n    message: string | undefined;\n    visible: boolean;\n  }\n\n  const [fullName, setFullName] = useState<string>(\"\");\n  const [alertData, setAlertData] = useState<alertDataType>({\n    type: undefined,\n    message: undefined,\n    visible: false,\n  });\n  const [displayAlert, setDisplayAlert] = useState<JSX.Element | undefined>(\n    undefined\n  );\n\n  async function submitForm() {\n    const response = await Axios.post(\"http://localhost:3003/celula\", {\n      name: fullName,\n    }).catch(() => {\n      return { status: 400 };\n    });\n\n    if (response.status === 201) {\n      setAlertData({\n        type: \"success\",\n        message: \"Inscrição realizada com sucesso\",\n        visible: true,\n      });\n    } else {\n      setAlertData({\n        type: \"error\",\n        message: \"Ocorreu um erro ao realizar a inscrição\",\n        visible: true,\n      });\n    }\n    setFullName(\"\");\n  }\n\n  useEffect(() => {\n    getDate()\n    setDisplayAlert(\n      alertData.visible ? (\n        <Alert severity={alertData.type}>{alertData.message}</Alert>\n      ) : undefined\n    );\n  }, [alertData]);\n\n  return (\n    <div id=\"celula-page\">\n      <Link to=\"/\" className=\"logo\">\n        <img src={smallLogo} alt=\"Início\" />\n      </Link>\n      <main>\n        {displayAlert}\n        <h2>Celula de Quinta-feira</h2>\n        <h3></h3>\n        <input\n          type=\"text\"\n          value={fullName}\n          onChange={(event) => setFullName(event.target.value)}\n          placeholder=\"Nome Completo\"\n        />\n\n        <Link to=\"/celula\" onClick={submitForm} className=\"confirm\">\n          Inscrever-se\n        </Link>\n        <Link to=\"/\" className=\"cancel\">\n          Voltar\n        </Link>\n      </main>\n    </div>\n  );\n}\n\nexport default CelulaPage;\n"]},"metadata":{},"sourceType":"module"}